

--> Done Initializing Environment

--> Initialing Signal Captures

--> Initializing Serial Port
Serial Port disabled

Creating Sequence rtt_main


--> RTT System Initialization

Script Request --> TIME_INFO
Setting the following time in the Model: 06-01 -2013   11:13:08 

Script Request --> SET_PROJECT

--> Exceute Test Cases

Creating Sequence rtt_main


Creating Sequence rtt_main


------------------------------------------------------------------
Running script1: r1

Script Request --> START_CAPTURE

Script Request --> STOP_CAPTURE

Script Request --> GET_EVENT_DATA
# 

Script Request --> UPLOAD_SCRIPT_DATA
# Get Script Variables: timestamp: 4082946
# generated script variable --> self.s2 = 11: timestamp: 4082961
# generated script variable --> self.TEST_RUN = "r1": timestamp: 4082981
# generated script variable --> self.description = "hello r1": timestamp: 4083001
# generated script variable --> self.s1 = 1: timestamp: 4083021
# Test Setup --> r1 Debug Level: 3: timestamp: 4083027
# Start Test --> : timestamp: 4083174
# signal1: 1: timestamp: 4083175
# signal2: 11: timestamp: 4083175
# self.model.c1.Value == 2.0: timestamp: 4083175
# self.model.c2.Value == 2.0: timestamp: 4083175
# self.model.c3.Value == 3.0: timestamp: 4083175
# Validation Timestamp: 4083175: timestamp: 4083175
# set c1: timestamp: 4083175

def test1_test_test():
    """
    script1 run r1 test 1: Confirm self.model.d1 is >= 4.0 and <= 6.0: actual value is 4.0
    """

    test_passed = True
    assert test_passed, "Failed test1_test"


# Validation Timestamp: 4083175: timestamp: 4083175
# set c2: timestamp: 4083175

def test2_test_test():
    """
    script1 run r1 test 2: Confirm self.model.d2 is >= 4.0 and <= 6.0: actual value is 4.0
    """

    test_passed = True
    assert test_passed, "Failed test2_test"


# Validation Timestamp: 4083175: timestamp: 4083175
# set c3: timestamp: 4083175

def test3_test_test():
    """
    script1 run r1 test 3: Confirm self.model.d3 is >= 4.0 and <= 6.0: actual value is 6.0
    """

    test_passed = True
    assert test_passed, "Failed test3_test"


# Test Done --> r1: timestamp: 4083176

-Completed script1: r1
-Completed script1 r1 in 2.03099989891 sec and No Capturing
------------------------------------------------------------------


------------------------------------------------------------------
Running script1: r2

Script Request --> START_CAPTURE

Script Request --> STOP_CAPTURE

Script Request --> GET_EVENT_DATA
# 

Script Request --> UPLOAD_SCRIPT_DATA
# Get Script Variables: timestamp: 4084985
# generated script variable --> self.s2 = 1111: timestamp: 4085000
# generated script variable --> self.TEST_RUN = "r2": timestamp: 4085020
# generated script variable --> self.description = "hello r2": timestamp: 4085040
# generated script variable --> self.s1 = 111: timestamp: 4085060
# Test Setup --> r2 Debug Level: 3: timestamp: 4085066
# Start Test --> : timestamp: 4085313
# signal1: 111: timestamp: 4085314
# signal2: 1111: timestamp: 4085314
# self.model.c1.Value == 2.0: timestamp: 4085314
# self.model.c2.Value == 2.0: timestamp: 4085314
# self.model.c3.Value == 3.0: timestamp: 4085314
# Validation Timestamp: 4085314: timestamp: 4085314
# set c1: timestamp: 4085314

def test1_test_test():
    """
    script1 run r2 test 1: Confirm self.model.d1 is >= 4.0 and <= 6.0: actual value is 4.0
    """

    test_passed = True
    assert test_passed, "Failed test1_test"


# Validation Timestamp: 4085314: timestamp: 4085314
# set c2: timestamp: 4085314

def test2_test_test():
    """
    script1 run r2 test 2: Confirm self.model.d2 is >= 4.0 and <= 6.0: actual value is 4.0
    """

    test_passed = True
    assert test_passed, "Failed test2_test"


# Validation Timestamp: 4085314: timestamp: 4085314
# set c3: timestamp: 4085314

def test3_test_test():
    """
    script1 run r2 test 3: Confirm self.model.d3 is >= 4.0 and <= 6.0: actual value is 6.0
    """

    test_passed = True
    assert test_passed, "Failed test3_test"


# Test Done --> r2: timestamp: 4085315

-Completed script1: r2
-Completed script1 r2 