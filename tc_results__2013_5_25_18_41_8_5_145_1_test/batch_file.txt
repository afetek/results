

--> Done Initializing Environment

--> Initialing Signal Captures

--> Initializing Serial Port
Serial Port disabled

Creating Sequence rtt_main


--> RTT System Initialization

Script Request --> TIME_INFO
Setting the following time in the Model: 05-25 -2013   18:41:07 

Script Request --> SET_PROJECT

--> Exceute Test Cases

Creating Sequence rtt_main


Creating Sequence rtt_main


------------------------------------------------------------------
Running script1: r1

Script Request --> START_CAPTURE

Script Request --> STOP_CAPTURE

Script Request --> GET_EVENT_DATA
# 

Script Request --> UPLOAD_SCRIPT_DATA
# Get Script Variables: timestamp: 10000212
# generated script variable --> self.s2 = 2: timestamp: 10000227
# generated script variable --> self.TEST_RUN = "r1": timestamp: 10000247
# generated script variable --> self.description = "hello r1": timestamp: 10000267
# generated script variable --> self.s1 = 1: timestamp: 10000287
# Test Setup --> r1 Debug Level: 3: timestamp: 10000293
# Start Test --> : timestamp: 10000673
# self.model.c1.Value == 1.0: timestamp: 10000674
# self.model.c2.Value == 2.0: timestamp: 10000674
# self.model.c3.Value == 3.0: timestamp: 10000674
# Validation Timestamp: 10000674: timestamp: 10000674
# set c2: timestamp: 10000674

def test1_r1_test_test():
    """
    Confirm self.model.d2 is >= 4.0 and <= 6.0: actual value is 4.0
    """

    test_passed = True
    assert test_passed, "Failed test1_r1_test"


# Validation Timestamp: 10000674: timestamp: 10000674
# set c3: timestamp: 10000674

def test2_r1_test_test():
    """
    Confirm self.model.d3 is >= 4.0 and <= 6.0: actual value is 6.0
    """

    test_passed = True
    assert test_passed, "Failed test2_r1_test"


# Validation Timestamp: 10001674: timestamp: 10001674
# set c1: timestamp: 10001674

def test3_r1_test_test():
    """
    Confirm self.model.d1 is >= 4.0 and <= 6.0: actual value is 2.0
    """

    test_passed = False
    assert test_passed, "Failed test3_r1_test"


# Test Done --> r1: timestamp: 10001674

def test4_r1_test_test():
    """
    Confirm event EVENT_1 is ACTIVE
    """

    test_passed = False
    assert test_passed, "Failed test4_r1_test"



-Completed script1: r1
-Completed script1 r1 in 3.07800006866 sec and No Capturing
------------------------------------------------------------------


------------------------------------------------------------------
Running script1: r2

Script Request --> START_CAPTURE

Script Request --> STOP_CAPTURE

Script Request --> GET_EVENT_DATA
# 

Script Request --> UPLOAD_SCRIPT_DATA
# Get Script Variables: timestamp: 10003306
# generated script variable --> self.s2 = 22: timestamp: 10003321
# generated script variable --> self.TEST_RUN = "r2": timestamp: 10003341
# generated script variable --> self.description = "hello r2": timestamp: 10003361
# generated script variable --> self.s1 = 11: timestamp: 10003381
# Test Setup --> r2 Debug Level: 3: timestamp: 10003387
# Start Test --> : timestamp: 10003765
# self.model.c1.Value == 1.0: timestamp: 10003766
# self.model.c2.Value == 2.0: timestamp: 10003766
# self.model.c3.Value == 3.0: timestamp: 10003766
# Validation Timestamp: 10003766: timestamp: 10003766
# set c2: timestamp: 10003766

def test1_r2_test_test():
    """
    Confirm self.model.d2 is >= 4.0 and <= 6.0: actual value is 4.0
    """

    test_passed = True
    assert test_passed, "Failed test1_r2_test"


# Validation Timestamp: 10003766: timestamp: 10003766
# set c3: timestamp: 10003766

def test2_r2_test_test():
    """
    Confirm self.model.d3 is >= 4.0 and <= 6.0: actual value is 6.0
    """

    test_passed = True
    assert test_passed, "Failed test2_r2_test"


# Validation Timestamp: 10004766: timestamp: 10004766
# set c1: timestamp: 10004766

def test3_r2_test_test():
    """
    Confirm self.model.d1 is >= 4.0 and <= 6.0: actual value is 2.0
    """

    test_passed = False
    assert test_passed, "Failed test3_r2_test"


# Test Done --> r2: timestamp: 10004766

def test4_r2_test_test():
    """
    Confirm event EVENT_1 is ACTIVE
    """

    test_passed = False
    assert test_passed, "Failed test4_r2_test"



-Completed script1: r2
-Completed script1 r2 in 3.06299996376 sec and No Capturing
------------------------------------------------------------------


Creating Sequence rtt_main


------------------------------------------------------------------
Running script2: r1

Script Request --> START_CAPTURE

Script Request --> STOP_CAPTURE

Script Request --> GET_EVENT_DATA
# 

Script Request --> UPLOAD_SCRIPT_DATA
# Get Script Variables: timestamp: 10007049
# generated script variable --> self.signal2 = 2: timestamp: 10007064
# generated script variable --> self.TEST_RUN = "r1": timestamp: 10007084
# generated script variable --> self.description = "hello r1": timestamp: 10007104
# generated script variable --> self.signal1 = 1: timestamp: 10007124
# Test Setup --> r1 Debug Level: 3: timestamp: 10007130
# Start Test --> : timestamp: 10007549
# I am here rtt_script_00070: timestamp: 10007550
# signal1: 1: timestamp: 10007550
# signal2: 2: timestamp: 10007550
# Test Done --> r1: timestamp: 10007550

def test1_r1_test_test():
    """
    Confirm event EVENT_1 is ACTIVE
    """

    test_passed = False
    assert test_passed, "Failed test1_r1_test"



-Completed script2: r1
-Completed script2 r1 in 2.06299996376 sec and No Capturing
------------------------------------------------------------------


------------------------------------------------------------------
Running script2: r2

Script Request --> START_CAPTURE

Script Request --> STOP_CAPTURE

Script Request --> GET_EVENT_DATA
# 

Script Request --> UPLOAD_SCRIPT_DATA
# Get Script Variables: timestamp: 10009122
# generated script variable --> self.signal2 = 22: timestamp: 10009137
# generated script variable --> self.TEST_RUN = "r2": timestamp: 10009157
# generated script variable --> self.description = "hello r2": timestamp: 10009177
# generated script variable --> self.signal1 = 11: timestamp: 10009197
# Test Setup --> r2 Debug Level: 3: timestamp: 10009203
# Start Test --> : timestamp: 10009770
# I am here rtt_script_00070: timestamp: 10009771
# signal1: 11: timestamp: 10009771
# signal2: 22: timestamp: 10009771
# Test Done --> r2: timestamp: 10009771

def test1_r2_test_test():
    """
    Confirm event EVENT_1 is ACTIVE
    """

    test_passed = False
    assert test_passed, "Failed test1_r2_test"



-Completed script2: r2
-Completed script2 r2 in 2.07800006866 sec and No Capturing
------------------------------------------------------------------


Creating Sequence rtt_main


--> Cleanup Model

--> Cleaning up Project
Cleaning up project
